#
# Miscellaneous I2C chip drivers configuration
#

menu "Miscellaneous I2C Chip support"


config SENSORS_ATMEGA
	tristate "ATMEGA micro controller"
	depends on I2C
	help
	  This is a simple adapter driver for the ATMEGA micro
	  controller on the Archos G6

config DS1682
	tristate "Dallas DS1682 Total Elapsed Time Recorder with Alarm"
	depends on EXPERIMENTAL
	help
	  If you say yes here you get support for Dallas Semiconductor
	  DS1682 Total Elapsed Time Recorder.

	  This driver can also be built as a module.  If so, the module
	  will be called ds1682.

config AT24
	tristate "EEPROMs from most vendors"
	depends on SYSFS && EXPERIMENTAL
	help
	  Enable this driver to get read/write support to most I2C EEPROMs,
	  after you configure the driver to know about each EEPROM on
	  your target board.  Use these generic chip names, instead of
	  vendor-specific ones like at24c64 or 24lc02:

	     24c00, 24c01, 24c02, spd (readonly 24c02), 24c04, 24c08,
	     24c16, 24c32, 24c64, 24c128, 24c256, 24c512, 24c1024

	  Unless you like data loss puzzles, always be sure that any chip
	  you configure as a 24c32 (32 kbit) or larger is NOT really a
	  24c16 (16 kbit) or smaller, and vice versa. Marking the chip
	  as read-only won't help recover from this. Also, if your chip
	  has any software write-protect mechanism you may want to review the
	  code to make sure this driver won't turn it on by accident.

	  If you use this with an SMBus adapter instead of an I2C adapter,
	  full functionality is not available.  Only smaller devices are
	  supported (24c16 and below, max 4 kByte).

	  This driver can also be built as a module.  If so, the module
	  will be called at24.

config SENSORS_EEPROM
	tristate "EEPROM reader"
	depends on EXPERIMENTAL
	help
	  If you say yes here you get read-only access to the EEPROM data
	  available on modern memory DIMMs and Sony Vaio laptops.  Such
	  EEPROMs could theoretically be available on other devices as well.

	  This driver can also be built as a module.  If so, the module
	  will be called eeprom.

config SENSORS_PCF8574
	tristate "Philips PCF8574 and PCF8574A (DEPRECATED)"
	depends on EXPERIMENTAL && GPIO_PCF857X = "n"
	default n
	help
	  If you say yes here you get support for Philips PCF8574 and 
	  PCF8574A chips. These chips are 8-bit I/O expanders for the I2C bus.

	  This driver can also be built as a module.  If so, the module
	  will be called pcf8574.

	  This driver is deprecated and will be dropped soon. Use
	  drivers/gpio/pcf857x.c instead.

	  These devices are hard to detect and rarely found on mainstream
	  hardware.  If unsure, say N.

config PCF8575
	tristate "Philips PCF8575 (DEPRECATED)"
	default n
	depends on GPIO_PCF857X = "n"
	help
	  If you say yes here you get support for Philips PCF8575 chip.
	  This chip is a 16-bit I/O expander for the I2C bus.  Several other
	  chip manufacturers sell equivalent chips, e.g. Texas Instruments.

	  This driver can also be built as a module.  If so, the module
	  will be called pcf8575.

	  This driver is deprecated and will be dropped soon. Use
	  drivers/gpio/pcf857x.c instead.

	  This device is hard to detect and is rarely found on mainstream
	  hardware.  If unsure, say N.

config SENSORS_PCA9539
	tristate "Philips PCA9539 16-bit I/O port (DEPRECATED)"
	depends on EXPERIMENTAL && GPIO_PCA953X = "n"
	help
	  If you say yes here you get support for the Philips PCA9539
	  16-bit I/O port.

	  This driver can also be built as a module.  If so, the module
	  will be called pca9539.

	  This driver is deprecated and will be dropped soon. Use
	  drivers/gpio/pca953x.c instead.

config SENSORS_PCF8591
	tristate "Philips PCF8591"
	depends on EXPERIMENTAL
	default n
	help
	  If you say yes here you get support for Philips PCF8591 chips.

	  This driver can also be built as a module.  If so, the module
	  will be called pcf8591.

	  These devices are hard to detect and rarely found on mainstream
	  hardware.  If unsure, say N.

config ISP1301_OMAP
	tristate "Philips ISP1301 with OMAP OTG"
	depends on ARCH_OMAP_OTG
	help
	  If you say yes here you get support for the Philips ISP1301
	  USB-On-The-Go transceiver working with the OMAP OTG controller.
	  The ISP1301 is used in products including H2 and H3 development
	  boards for Texas Instruments OMAP processors.
	  
	  This driver can also be built as a module.  If so, the module
	  will be called isp1301_omap.

config ISP1301_HOST
	tristate "Philips ISP1301 in Host mode with OMAP3 OHCI"
	depends on ARCH_OMAP_OTG && ARCH_OMAP3
	help
	  If you say yes here you get support for the Philips ISP1301
	  USB-On-The-Go transceiver working with the OMAP3 OHCI controller.
	  The ISP1301 is used in products including the 3430SDP development
	  boards for Texas Instruments OMAP3 processors.

	  This driver can also be built as a module.  If so, the module
	  will be called isp1301_host.

config TPS65010
	tristate "TPS6501x Power Management chips"
	depends on GPIOLIB
	default y if MACH_OMAP_H2 || MACH_OMAP_H3 || MACH_OMAP_OSK
	help
	  If you say yes here you get support for the TPS6501x series of
	  Power Management chips.  These include voltage regulators,
	  lithium ion/polymer battery charging, and other features that
	  are often used in portable devices like cell phones and cameras.

	  This driver can also be built as a module.  If so, the module
	  will be called tps65010.

config SENSORS_TLV320AIC23
	tristate "Texas Instruments TLV320AIC23 Codec"
	depends on I2C && I2C_OMAP
	help
	  If you say yes here you get support for the I2C control
	  interface for Texas Instruments TLV320AIC23 audio codec.

config GPIOEXPANDER_OMAP
	bool "GPIO Expander PCF8574PWR for OMAP"
	depends on I2C && (ARCH_OMAP16XX || ARCH_OMAP24XX)
	help
	  If you say yes here you get support for I/O expander calls
	  to configure IrDA, Camera and audio devices.

config SENSORS_WM87XX
        tristate "Wolfson Microelectronics WM87XX i2c driver"
        depends on I2C && ARCH_OMAP34XX
        help
          If you say yes here you get support for the I2C control
          interface for Wolfson Microelectronics WM87XX audio codec.

config TWL4030_MADC
	tristate "TWL4030 MADC Driver"
	depends on TWL4030_CORE
	help
	  The TWL4030 Monitoring ADC driver enables the host
	  processor to monitor analog signals using analog-to-digital
	  conversions on the input source. TWL4030 MADC provides the
	  following features:
	   - Single 10-bit ADC with successive approximation register (SAR) conversion;
	   - Analog multiplexer for 16 inputs;
	   - Seven (of the 16) inputs are freely available;
	   - Battery voltage monitoring;
	   - Concurrent conversion request management;
	   - Interrupt signal to Primary Interrupt Handler;
	   - Averaging feature;
	   - Selective enable/disable of the averaging feature.

	  Say 'y' here to statically link this module into the kernel or 'm'
	  to build it as a dinamically loadable module. The module will be
	  called twl4030-madc.ko

config TWL4030_USB
	tristate "TWL4030 USB Transceiver Driver"
	depends on TWL4030_CORE

choice
	prompt "Transceiver mode"
	depends on TWL4030_USB
	help
	  TWL4030 USB transceiver can operate in various
	  mutually-exclusive modes. Select one of them.

config TWL4030_USB_HS_ULPI
	depends on TWL4030_USB
	bool "High-speed ULPI"
	help
	  Say Y here if the TWL4030 is connected to high-speed USB
	  controller through a ULPI interface.

endchoice

config USB_LAT_CONST
	bool "USB Latency Constraint in TWL4030"
	help
	    Enable latency constraint in TWL4030, for lower
	    power consumption.

	    In some cases, constraints may not work as expected. It
	    appears that even when the constraint is released,
	    the core does not go to off/RET.  To test this, set
	    USB_LAT_CONST and try a connect/disconnect sequence.

	    If unsure, say N.

config TWL4030_PWRBUTTON
	tristate "TWL4030 Power button Driver"
	depends on TWL4030_CORE

config TWL4030_POWEROFF
	tristate "TWL4030 device poweroff"
	depends on TWL4030_CORE

config SENSORS_MAX6875
	tristate "Maxim MAX6875 Power supply supervisor"
	depends on EXPERIMENTAL
	help
	  If you say yes here you get support for the Maxim MAX6875
	  EEPROM-programmable, quad power-supply sequencer/supervisor.

	  This provides an interface to program the EEPROM and reset the chip.

	  This driver also supports the Maxim MAX6874 hex power-supply
	  sequencer/supervisor if found at a compatible address.

	  This driver can also be built as a module.  If so, the module
	  will be called max6875.

config SENSORS_TSL2550
	tristate "Taos TSL2550 ambient light sensor"
	depends on EXPERIMENTAL
	help
	  If you say yes here you get support for the Taos TSL2550
	  ambient light sensor.

	  This driver can also be built as a module.  If so, the module
	  will be called tsl2550.

config SENSORS_TSL2563
       tristate "Taos TSL2563 ambient light sensor"
       depends on I2C && HWMON
       help
         If you say yes here you get support for the Taos TSL2563
         ambient light sensor.

         This driver can also be built as a module.  If so, the module
         will be called tsl2563.

config LP5521
	tristate "LP5521 LED driver chip"
	depends on I2C
	help
	  If you say yes here you get support for the National Semiconductor
	  LP5521 LED driver.

config MENELAUS
	bool "TWL92330/Menelaus PM chip"
	depends on I2C=y && ARCH_OMAP24XX
	help
	  If you say yes here you get support for the Texas Instruments
	  TWL92330/Menelaus Power Management chip. This include voltage
	  regulators, Dual slot memory card tranceivers, real-time clock
	  and other features that are often used in portable devices like
	  cell phones and PDAs.

config SENSORS_AKM8976
	tristate "AKM8976 Compass Driver"
	depends on I2C
	help
	 AKM8976 Compass Driver implemented by HTC.

config SENSORS_PCA963X
	tristate "Philips PCA963X 4-bit I2C-bus LED"
	depends on I2C && EXPERIMENTAL
	help
	 If you say yes here you get support for the Philips PCA963X
	 4-bit I2C-bus LED.

	 This driver can also be built as a module.  If so, the module
	 will be called pca963X.

config SENSORS_HELMETCAM
	tristate "Helmetcam I2C control on Archos boards"
	depends on MACH_ARCHOS
	help
	  This is the helmet I2C control 
	  If unsure, say N.

endmenu
